#include <IRremote.h>
#include <WiFi.h>
#include <time.h>

#include "config.h"

#define JST 3600*9

int SEND_PIN = 2;
int khz = 38;

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, pw);
  while(WiFi.status() != WL_CONNECTED) {
    Serial.print('.');
    delay(500);
  }
  Serial.println();
  Serial.printf("Connected, IP address: ");
  Serial.println(WiFi.localIP());

  configTime( JST, 0, "ntp.nict.jp", "ntp.jst.mfeed.ad.jp");

  IrSender.begin(SEND_PIN);
}

// PowerOn Signal
uint16_t irSignal[981] = {29766, 49338, 3381, 1642, 437, 1240, 467, 369, 470, 367, 471, 366, 472, 365, 473, 364, 443, 394, 444, 396, 442, 392, 435, 402, 436, 400, 438, 399, 439, 1234, 442, 395, 443, 395, 443, 397, 441, 392, 446, 391, 437, 400, 438, 399, 439, 397, 441, 397, 441, 395, 443, 397, 441, 393, 445, 392, 446, 391, 436, 401, 437, 399, 439, 398, 440, 1234, 442, 398, 441, 1229, 436, 1238, 438, 1236, 440, 1233, 443, 1231, 445, 1229, 436, 401, 438, 1239, 437, 1234, 441, 1232, 444, 1230, 437, 1237, 438, 1235, 441, 1234, 442, 1230, 446, 1231, 445, 389, 439, 398, 440, 397, 441, 396, 442, 394, 444, 393, 445, 393, 445, 394, 443, 391, 437, 401, 437, 1236, 440, 1233, 443, 395, 443, 393, 445, 1229, 437, 1240, 435, 1235, 441, 1232, 444, 394, 444, 393, 447, 1227, 437, 1236, 440, 396, 442, 399, 439, 395, 443, 1230, 445, 393, 445, 391, 437, 1236, 440, 398, 440, 396, 442, 1236, 440, 1229, 437, 400, 437, 1237, 439, 1235, 441, 396, 442, 1232, 444, 1229, 436, 404, 445, 1225, 440, 1235, 441, 395, 443, 394, 444, 1230, 436, 400, 438, 399, 439, 402, 436, 397, 441, 396, 442, 1232, 444, 1229, 436, 401, 437, 1237, 439, 1235, 441, 1236, 440, 393, 445, 392, 436, 401, 437, 1237, 439, 397, 441, 1233, 443, 1231, 445, 395, 443, 1227, 438, 1236, 440, 1234, 442, 394, 444, 1230, 446, 391, 437, 400, 438, 1239, 437, 397, 441, 396, 442, 394, 444, 393, 445, 392, 436, 401, 436, 400, 439, 402, 446, 1224, 442, 1232, 443, 1231, 445, 1228, 438, 1236, 440, 1234, 442, 1231, 445, 1233, 443, 390, 437, 400, 438, 399, 440, 397, 440, 397, 441, 395, 443, 394, 444, 397, 441, 1228, 438, 1237, 439, 1235, 441, 1232, 444, 1230, 446, 1227, 438, 1236, 440, 1238, 438, 394, 444, 393, 445, 392, 446, 391, 436, 401, 437, 399, 439, 398, 440, 401, 437, 1233, 444, 1230, 445, 1228, 438, 1236, 440, 1234, 442, 1232, 444, 1229, 436, 1241, 446, 388, 439, 397, 441, 397, 441, 396, 442, 395, 443, 394, 444, 392, 446, 394, 444, 1226, 439, 1235, 441, 1233, 443, 1230, 446, 1228, 438, 1236, 440, 1233, 443, 1235, 441, 391, 447, 392, 446, 390, 437, 400, 438, 399, 439, 397, 441, 396, 442, 399, 439, 1231, 445, 1228, 438, 1236, 439, 1235, 441, 1233, 443, 1230, 446, 1228, 438, 1239, 436, 398, 440, 1234, 442, 1232, 444, 393, 445, 391, 437, 1236, 440, 398, 440, 400, 438, 1232, 444, 393, 445, 392, 435, 1238, 438, 1236, 440, 398, 440, 1233, 443, 1233, 443, 1229, 437, 400, 438, 398, 440, 397, 441, 1233, 443, 1230, 445, 1229, 437, 1240, 436, 397, 441, 1233, 443, 1231, 445, 1229, 436, 400, 439, 398, 440, 397, 441, 399, 439, 395, 442, 394, 444, 393, 446, 392, 446, 390, 437, 400, 438, 398, 440, 401, 437, 1233, 443, 1232, 444, 1228, 437, 1238, 438, 1236, 440, 1233, 443, 1231, 445, 1232, 444, 389, 439, 398, 440, 396, 442, 395, 443, 395, 442, 394, 444, 393, 445, 395, 443, 1228, 438, 1235, 441, 1233, 442, 1232, 444, 1230, 440, 1233, 439, 1235, 441, 1236, 440, 394, 444, 393, 444, 392, 436, 401, 437, 399, 439, 399, 439, 398, 440, 1237, 439, 1231, 445, 1229, 436, 1237, 439, 1235, 441, 1233, 443, 1231, 445, 1229, 437, 402, 446, 1225, 440, 1234, 442, 395, 443, 393, 445, 392, 436, 401, 437, 400, 438, 402, 436, 397, 441, 396, 442, 1233, 443, 1230, 435, 1238, 438, 1237, 439, 1234, 442, 1236, 440, 1230, 446, 390, 437, 400, 438, 399, 439, 397, 441, 396, 442, 396, 442, 397, 441, 393, 445, 1229, 437, 1236, 439, 1235, 441, 1232, 444, 1230, 446, 1228, 437, 1240, 436, 398, 440, 396, 442, 395, 443, 1231, 445, 392, 446, 391, 447, 1227, 439, 1237, 439, 1232, 444, 1229, 436, 1238, 438, 400, 438, 1235, 441, 1232, 444, 394, 444, 396, 442, 391, 437, 400, 438, 399, 439, 398, 440, 397, 441, 395, 443, 394, 444, 396, 442, 1228, 437, 1237, 439, 1235, 441, 1233, 443, 1231, 445, 1228, 437, 1237, 439, 1238, 438, 396, 442, 395, 443, 393, 445, 392, 436, 401, 437, 400, 438, 399, 439, 401, 436, 1235, 441, 1232, 444, 1230, 436, 1238, 438, 1235, 441, 1232, 443, 1232, 445, 1232, 443, 1226, 440, 1235, 441, 1233, 442, 1231, 445, 1229, 437, 1236, 440, 1234, 442, 1236, 440, 392, 446, 391, 436, 401, 438, 399, 438, 399, 439, 397, 441, 396, 443, 398, 439, 1231, 445, 1229, 437, 1236, 440, 1234, 442, 1232, 444, 1230, 445, 1228, 438, 1239, 437, 397, 441, 395, 443, 395, 443, 394, 444, 393, 444, 393, 445, 391, 437, 403, 445, 1225, 441, 1233, 443, 1231, 445, 1228, 437, 1237, 439, 1235, 441, 1232, 444, 1234, 442, 391, 436, 402, 436, 400, 438, 400, 438, 398, 440, 396, 442, 395, 443, 397, 441, 1230, 446, 1227, 438, 1236, 440, 1234, 442, 1232, 444, 1229, 437, 1237, 438, 1239, 437, 397, 441, 396, 442, 395, 443, 393, 445, 393, 445, 391, 437, 400, 438, 403, 445, 388, 440, 396, 442, 396, 442, 394, 444, 393, 445, 392, 436, 400, 438, 403, 445, 1225, 440, 1234, 443, 1230, 445, 1229, 437, 1237, 439, 1235, 441, 1233, 443, 1234, 442, 391, 436, 401, 438, 398, 439, 399, 440, 397, 441, 395, 443, 394, 444, 396, 442, 1228, 437, 1238, 438, 1235, 441, 1232, 444, 1231, 445, 1228, 438, 1236, 440, 1237, 439, 395, 443, 393, 445, 392, 446, 391, 437, 400, 438, 399, 439, 397, 440, 401, 437, 1233, 443, 1231, 445, 1228, 438, 1237, 439, 1234, 442, 1231, 445, 1230, 446, 1230, 445, 389, 439, 397, 441, 396, 442, 396, 442, 395, 443, 393, 445, 393, 445, 395, 443, 1226, 439, 1235, 441, 1233, 443, 1230, 446, 1229, 437, 1236, 440, 1234, 442, 1234, 441};

void loop() {
  time_t t;
  struct tm *tm;

  static const char *wd[7] = {"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"};

  t = time(NULL);
  tm = localtime(&t);

  Serial.printf(" %04d/%02d/%02d(%s) %02d:%02d:%02d\n", tm->tm_year+1900, tm->tm_mon+1, tm->tm_mday, wd[tm->tm_wday], tm->tm_hour, tm->tm_min, tm->tm_sec);

  if (tm->tm_hour == 6 && tm->tm_min == 0 && tm->tm_sec == 0) {
    Serial.println("ON");
    IrSender.sendRaw(irSignal, 981, khz);
  }

  delay(1000);
}